/* 
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using DocuSign.eSign.Client;
using DocuSign.eSign.Api;
using DocuSign.eSign.Model;

namespace DocuSign.eSign.Test
{
    /// <summary>
    ///  Class for testing EnvelopesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [NUnit.Framework.TestFixtureAttribute]
    public class EnvelopesApiTests
    {
        private EnvelopesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [NUnit.Framework.SetUpAttribute]
        public void Init()
        {
            instance = new EnvelopesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EnvelopesApi
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EnvelopesApi
            //NUnit.Framework.Assert.IsInstanceOf(typeof(EnvelopesApi), instance, "instance is a EnvelopesApi");
        }

        
        /// <summary>
        /// Test ApplyTemplate
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ApplyTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentTemplateList documentTemplateList = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.ApplyTemplate(documentTemplateList, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<DocumentTemplateList> (response, "response is DocumentTemplateList");
        }
        
        /// <summary>
        /// Test ApplyTemplateToDocument
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ApplyTemplateToDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentTemplateList documentTemplateList = null;
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //var response = instance.ApplyTemplateToDocument(documentTemplateList, accountId, envelopeId, documentId);
            //NUnit.Framework.Assert.IsInstanceOf<DocumentTemplateList> (response, "response is DocumentTemplateList");
        }
        
        /// <summary>
        /// Test CreateChunkedUpload
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateChunkedUploadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChunkedUploadRequest chunkedUploadRequest = null;
            //string accountId = null;
            //var response = instance.CreateChunkedUpload(chunkedUploadRequest, accountId);
            //NUnit.Framework.Assert.IsInstanceOf<ChunkedUploadResponse> (response, "response is ChunkedUploadResponse");
        }
        
        /// <summary>
        /// Test CreateConsoleView
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateConsoleViewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConsoleViewRequest consoleViewRequest = null;
            //string accountId = null;
            //var response = instance.CreateConsoleView(consoleViewRequest, accountId);
            //NUnit.Framework.Assert.IsInstanceOf<ViewUrl> (response, "response is ViewUrl");
        }
        
        /// <summary>
        /// Test CreateCorrectView
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateCorrectViewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CorrectViewRequest correctViewRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.CreateCorrectView(correctViewRequest, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<ViewUrl> (response, "response is ViewUrl");
        }
        
        /// <summary>
        /// Test CreateCustomFields
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CustomFields customFields = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.CreateCustomFields(customFields, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<CustomFields> (response, "response is CustomFields");
        }
        
        /// <summary>
        /// Test CreateDocumentFields
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateDocumentFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentFieldsInformation documentFieldsInformation = null;
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //var response = instance.CreateDocumentFields(documentFieldsInformation, accountId, envelopeId, documentId);
            //NUnit.Framework.Assert.IsInstanceOf<DocumentFieldsInformation> (response, "response is DocumentFieldsInformation");
        }
        
        /// <summary>
        /// Test CreateEditView
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateEditViewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReturnUrlRequest returnUrlRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.CreateEditView(returnUrlRequest, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<ViewUrl> (response, "response is ViewUrl");
        }
        
        /// <summary>
        /// Test CreateEmailSettings
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateEmailSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EmailSettings emailSettings = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.CreateEmailSettings(emailSettings, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EmailSettings> (response, "response is EmailSettings");
        }
        
        /// <summary>
        /// Test CreateEnvelope
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateEnvelopeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cdseMode = null;
            //string completedDocumentsOnly = null;
            //string mergeRolesOnDraft = null;
            //EnvelopeDefinition envelopeDefinition = null;
            //string accountId = null;
            //var response = instance.CreateEnvelope(cdseMode, completedDocumentsOnly, mergeRolesOnDraft, envelopeDefinition, accountId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeSummary> (response, "response is EnvelopeSummary");
        }
        
        /// <summary>
        /// Test CreateLock
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateLockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LockRequest lockRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.CreateLock(lockRequest, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<LockInformation> (response, "response is LockInformation");
        }
        
        /// <summary>
        /// Test CreateRecipient
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateRecipientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string resendEnvelope = null;
            //Recipients recipients = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.CreateRecipient(resendEnvelope, recipients, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<Recipients> (response, "response is Recipients");
        }
        
        /// <summary>
        /// Test CreateRecipientView
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateRecipientViewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecipientViewRequest recipientViewRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.CreateRecipientView(recipientViewRequest, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<ViewUrl> (response, "response is ViewUrl");
        }
        
        /// <summary>
        /// Test CreateSenderView
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateSenderViewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReturnUrlRequest returnUrlRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.CreateSenderView(returnUrlRequest, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<ViewUrl> (response, "response is ViewUrl");
        }
        
        /// <summary>
        /// Test CreateTabs
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateTabsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Tabs tabs = null;
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.CreateTabs(tabs, accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<Tabs> (response, "response is Tabs");
        }
        
        /// <summary>
        /// Test CreateViewLink
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CreateViewLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ViewLinkRequest viewLinkRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.CreateViewLink(viewLinkRequest, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<ViewUrl> (response, "response is ViewUrl");
        }
        
        /// <summary>
        /// Test DeleteAttachments
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteAttachmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EnvelopeAttachmentsRequest envelopeAttachmentsRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.DeleteAttachments(envelopeAttachmentsRequest, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeAttachmentsResult> (response, "response is EnvelopeAttachmentsResult");
        }
        
        /// <summary>
        /// Test DeleteChunkedUpload
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteChunkedUploadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string chunkedUploadId = null;
            //var response = instance.DeleteChunkedUpload(accountId, chunkedUploadId);
            //NUnit.Framework.Assert.IsInstanceOf<ChunkedUploadResponse> (response, "response is ChunkedUploadResponse");
        }
        
        /// <summary>
        /// Test DeleteCustomFields
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CustomFields customFields = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.DeleteCustomFields(customFields, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<CustomFields> (response, "response is CustomFields");
        }
        
        /// <summary>
        /// Test DeleteDocumentFields
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteDocumentFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentFieldsInformation documentFieldsInformation = null;
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //var response = instance.DeleteDocumentFields(documentFieldsInformation, accountId, envelopeId, documentId);
            //NUnit.Framework.Assert.IsInstanceOf<DocumentFieldsInformation> (response, "response is DocumentFieldsInformation");
        }
        
        /// <summary>
        /// Test DeleteDocumentPage
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteDocumentPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //string pageNumber = null;
            //instance.DeleteDocumentPage(accountId, envelopeId, documentId, pageNumber);
            
        }
        
        /// <summary>
        /// Test DeleteDocuments
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EnvelopeDefinition envelopeDefinition = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.DeleteDocuments(envelopeDefinition, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeDocumentsResult> (response, "response is EnvelopeDocumentsResult");
        }
        
        /// <summary>
        /// Test DeleteEmailSettings
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteEmailSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.DeleteEmailSettings(accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EmailSettings> (response, "response is EmailSettings");
        }
        
        /// <summary>
        /// Test DeleteLock
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteLockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.DeleteLock(accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<LockInformation> (response, "response is LockInformation");
        }
        
        /// <summary>
        /// Test DeleteRecipient
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteRecipientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.DeleteRecipient(accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<Recipients> (response, "response is Recipients");
        }
        
        /// <summary>
        /// Test DeleteRecipients
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteRecipientsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Recipients recipients = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.DeleteRecipients(recipients, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<Recipients> (response, "response is Recipients");
        }
        
        /// <summary>
        /// Test DeleteTabs
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteTabsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Tabs tabs = null;
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.DeleteTabs(tabs, accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<Tabs> (response, "response is Tabs");
        }
        
        /// <summary>
        /// Test DeleteTemplatesFromDocument
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteTemplatesFromDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //string templateId = null;
            //instance.DeleteTemplatesFromDocument(accountId, envelopeId, documentId, templateId);
            
        }
        
        /// <summary>
        /// Test DeleteViewLink
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DeleteViewLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //instance.DeleteViewLink(accountId, envelopeId);
            
        }
        
        /// <summary>
        /// Test GetAttachment
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //string attachmentId = null;
            //instance.GetAttachment(accountId, envelopeId, attachmentId);
            
        }
        
        /// <summary>
        /// Test GetAttachments
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetAttachmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.GetAttachments(accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeAttachmentsResult> (response, "response is EnvelopeAttachmentsResult");
        }
        
        /// <summary>
        /// Test GetChunkedUpload
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetChunkedUploadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string include = null;
            //string accountId = null;
            //string chunkedUploadId = null;
            //var response = instance.GetChunkedUpload(include, accountId, chunkedUploadId);
            //NUnit.Framework.Assert.IsInstanceOf<ChunkedUploadResponse> (response, "response is ChunkedUploadResponse");
        }
        
        /// <summary>
        /// Test GetConsumerDisclosure
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetConsumerDisclosureTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string langCode2 = null;
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //string langCode = null;
            //var response = instance.GetConsumerDisclosure(langCode2, accountId, envelopeId, recipientId, langCode);
            //NUnit.Framework.Assert.IsInstanceOf<ConsumerDisclosure> (response, "response is ConsumerDisclosure");
        }
        
        /// <summary>
        /// Test GetConsumerDisclosureDefault
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetConsumerDisclosureDefaultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string langCode = null;
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.GetConsumerDisclosureDefault(langCode, accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<ConsumerDisclosure> (response, "response is ConsumerDisclosure");
        }
        
        /// <summary>
        /// Test GetDocument
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string certificate = null;
            //string encoding = null;
            //string encrypt = null;
            //string language = null;
            //string recipientId = null;
            //string showChanges = null;
            //string watermark = null;
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //var response = instance.GetDocument(certificate, encoding, encrypt, language, recipientId, showChanges, watermark, accountId, envelopeId, documentId);
            //NUnit.Framework.Assert.IsInstanceOf<System.IO.Stream> (response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test GetDocumentPageImage
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetDocumentPageImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dpi = null;
            //string maxHeight = null;
            //string maxWidth = null;
            //string showChanges = null;
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //string pageNumber = null;
            //var response = instance.GetDocumentPageImage(dpi, maxHeight, maxWidth, showChanges, accountId, envelopeId, documentId, pageNumber);
            //NUnit.Framework.Assert.IsInstanceOf<System.IO.Stream> (response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test GetEmailSettings
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetEmailSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.GetEmailSettings(accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EmailSettings> (response, "response is EmailSettings");
        }
        
        /// <summary>
        /// Test GetEnvelope
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetEnvelopeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string advancedUpdate = null;
            //string include = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.GetEnvelope(advancedUpdate, include, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<Envelope> (response, "response is Envelope");
        }
        
        /// <summary>
        /// Test GetFormData
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetFormDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.GetFormData(accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeFormData> (response, "response is EnvelopeFormData");
        }
        
        /// <summary>
        /// Test GetLock
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetLockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.GetLock(accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<LockInformation> (response, "response is LockInformation");
        }
        
        /// <summary>
        /// Test GetNotificationSettings
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetNotificationSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.GetNotificationSettings(accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<Notification> (response, "response is Notification");
        }
        
        /// <summary>
        /// Test GetRecipientDocumentVisibility
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetRecipientDocumentVisibilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.GetRecipientDocumentVisibility(accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<DocumentVisibilityList> (response, "response is DocumentVisibilityList");
        }
        
        /// <summary>
        /// Test GetRecipientInitialsImage
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetRecipientInitialsImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string includeChrome = null;
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.GetRecipientInitialsImage(includeChrome, accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<System.IO.Stream> (response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test GetRecipientSignature
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetRecipientSignatureTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.GetRecipientSignature(accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<UserSignature> (response, "response is UserSignature");
        }
        
        /// <summary>
        /// Test GetRecipientSignatureImage
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetRecipientSignatureImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string includeChrome = null;
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.GetRecipientSignatureImage(includeChrome, accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<System.IO.Stream> (response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test GetTemplateRecipientDocumentVisibility
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void GetTemplateRecipientDocumentVisibilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string templateId = null;
            //string recipientId = null;
            //var response = instance.GetTemplateRecipientDocumentVisibility(accountId, templateId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<DocumentVisibilityList> (response, "response is DocumentVisibilityList");
        }
        
        /// <summary>
        /// Test ListAuditEvents
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListAuditEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.ListAuditEvents(accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeAuditEventResponse> (response, "response is EnvelopeAuditEventResponse");
        }
        
        /// <summary>
        /// Test ListCustomFields
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.ListCustomFields(accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<CustomFieldsEnvelope> (response, "response is CustomFieldsEnvelope");
        }
        
        /// <summary>
        /// Test ListDocumentFields
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListDocumentFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //var response = instance.ListDocumentFields(accountId, envelopeId, documentId);
            //NUnit.Framework.Assert.IsInstanceOf<DocumentFieldsInformation> (response, "response is DocumentFieldsInformation");
        }
        
        /// <summary>
        /// Test ListDocuments
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string includeMetadata = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.ListDocuments(includeMetadata, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeDocumentsResult> (response, "response is EnvelopeDocumentsResult");
        }
        
        /// <summary>
        /// Test ListRecipients
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListRecipientsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string includeAnchorTabLocations = null;
            //string includeExtended = null;
            //string includeMetadata = null;
            //string includeTabs = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.ListRecipients(includeAnchorTabLocations, includeExtended, includeMetadata, includeTabs, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<Recipients> (response, "response is Recipients");
        }
        
        /// <summary>
        /// Test ListStatus
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //string fromDate = null;
            //string startPosition = null;
            //string toDate = null;
            //EnvelopeIdsRequest envelopeIdsRequest = null;
            //string accountId = null;
            //var response = instance.ListStatus(email, fromDate, startPosition, toDate, envelopeIdsRequest, accountId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopesInformation> (response, "response is EnvelopesInformation");
        }
        
        /// <summary>
        /// Test ListStatusChanges
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListStatusChangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string acStatus = null;
            //string block = null;
            //string count = null;
            //string customField = null;
            //string email = null;
            //string envelopeIds = null;
            //string exclude = null;
            //string folderIds = null;
            //string folderTypes = null;
            //string fromDate = null;
            //string fromToStatus = null;
            //string include = null;
            //string intersectingFolderIds = null;
            //string order = null;
            //string orderBy = null;
            //string powerformids = null;
            //string searchText = null;
            //string startPosition = null;
            //string status = null;
            //string toDate = null;
            //string transactionIds = null;
            //string userFilter = null;
            //string userId = null;
            //string userName = null;
            //string accountId = null;
            //var response = instance.ListStatusChanges(acStatus, block, count, customField, email, envelopeIds, exclude, folderIds, folderTypes, fromDate, fromToStatus, include, intersectingFolderIds, order, orderBy, powerformids, searchText, startPosition, status, toDate, transactionIds, userFilter, userId, userName, accountId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopesInformation> (response, "response is EnvelopesInformation");
        }
        
        /// <summary>
        /// Test ListTabs
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListTabsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string includeAnchorTabLocations = null;
            //string includeMetadata = null;
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.ListTabs(includeAnchorTabLocations, includeMetadata, accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<Tabs> (response, "response is Tabs");
        }
        
        /// <summary>
        /// Test ListTemplates
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string include = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.ListTemplates(include, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<TemplateInformation> (response, "response is TemplateInformation");
        }
        
        /// <summary>
        /// Test ListTemplatesForDocument
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListTemplatesForDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string include = null;
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //var response = instance.ListTemplatesForDocument(include, accountId, envelopeId, documentId);
            //NUnit.Framework.Assert.IsInstanceOf<TemplateInformation> (response, "response is TemplateInformation");
        }
        
        /// <summary>
        /// Test PutAttachment
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void PutAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Attachment attachment = null;
            //string accountId = null;
            //string envelopeId = null;
            //string attachmentId = null;
            //var response = instance.PutAttachment(attachment, accountId, envelopeId, attachmentId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeAttachmentsResult> (response, "response is EnvelopeAttachmentsResult");
        }
        
        /// <summary>
        /// Test PutAttachments
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void PutAttachmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EnvelopeAttachmentsRequest envelopeAttachmentsRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.PutAttachments(envelopeAttachmentsRequest, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeAttachmentsResult> (response, "response is EnvelopeAttachmentsResult");
        }
        
        /// <summary>
        /// Test RotateDocumentPage
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void RotateDocumentPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PageRequest pageRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //string pageNumber = null;
            //instance.RotateDocumentPage(pageRequest, accountId, envelopeId, documentId, pageNumber);
            
        }
        
        /// <summary>
        /// Test Update
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string advancedUpdate = null;
            //string resendEnvelope = null;
            //Envelope envelope = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.Update(advancedUpdate, resendEnvelope, envelope, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeUpdateSummary> (response, "response is EnvelopeUpdateSummary");
        }
        
        /// <summary>
        /// Test UpdateChunkedUpload
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateChunkedUploadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string action = null;
            //string accountId = null;
            //string chunkedUploadId = null;
            //var response = instance.UpdateChunkedUpload(action, accountId, chunkedUploadId);
            //NUnit.Framework.Assert.IsInstanceOf<ChunkedUploadResponse> (response, "response is ChunkedUploadResponse");
        }
        
        /// <summary>
        /// Test UpdateChunkedUploadPart
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateChunkedUploadPartTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChunkedUploadRequest chunkedUploadRequest = null;
            //string accountId = null;
            //string chunkedUploadId = null;
            //string chunkedUploadPartSeq = null;
            //var response = instance.UpdateChunkedUploadPart(chunkedUploadRequest, accountId, chunkedUploadId, chunkedUploadPartSeq);
            //NUnit.Framework.Assert.IsInstanceOf<ChunkedUploadResponse> (response, "response is ChunkedUploadResponse");
        }
        
        /// <summary>
        /// Test UpdateCustomFields
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CustomFields customFields = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.UpdateCustomFields(customFields, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<CustomFields> (response, "response is CustomFields");
        }
        
        /// <summary>
        /// Test UpdateDocument
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applyDocumentFields = null;
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //instance.UpdateDocument(applyDocumentFields, accountId, envelopeId, documentId);
            
        }
        
        /// <summary>
        /// Test UpdateDocumentFields
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateDocumentFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentFieldsInformation documentFieldsInformation = null;
            //string accountId = null;
            //string envelopeId = null;
            //string documentId = null;
            //var response = instance.UpdateDocumentFields(documentFieldsInformation, accountId, envelopeId, documentId);
            //NUnit.Framework.Assert.IsInstanceOf<DocumentFieldsInformation> (response, "response is DocumentFieldsInformation");
        }
        
        /// <summary>
        /// Test UpdateDocuments
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applyDocumentFields = null;
            //EnvelopeDefinition envelopeDefinition = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.UpdateDocuments(applyDocumentFields, envelopeDefinition, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EnvelopeDocumentsResult> (response, "response is EnvelopeDocumentsResult");
        }
        
        /// <summary>
        /// Test UpdateEmailSettings
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateEmailSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EmailSettings emailSettings = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.UpdateEmailSettings(emailSettings, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<EmailSettings> (response, "response is EmailSettings");
        }
        
        /// <summary>
        /// Test UpdateLock
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateLockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LockRequest lockRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.UpdateLock(lockRequest, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<LockInformation> (response, "response is LockInformation");
        }
        
        /// <summary>
        /// Test UpdateNotificationSettings
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateNotificationSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EnvelopeNotificationRequest envelopeNotificationRequest = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.UpdateNotificationSettings(envelopeNotificationRequest, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<Notification> (response, "response is Notification");
        }
        
        /// <summary>
        /// Test UpdateRecipientDocumentVisibility
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateRecipientDocumentVisibilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentVisibilityList documentVisibilityList = null;
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.UpdateRecipientDocumentVisibility(documentVisibilityList, accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<DocumentVisibilityList> (response, "response is DocumentVisibilityList");
        }
        
        /// <summary>
        /// Test UpdateRecipientInitialsImage
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateRecipientInitialsImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //instance.UpdateRecipientInitialsImage(accountId, envelopeId, recipientId);
            
        }
        
        /// <summary>
        /// Test UpdateRecipientSignatureImage
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateRecipientSignatureImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //instance.UpdateRecipientSignatureImage(accountId, envelopeId, recipientId);
            
        }
        
        /// <summary>
        /// Test UpdateRecipients
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateRecipientsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string resendEnvelope = null;
            //Recipients recipients = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.UpdateRecipients(resendEnvelope, recipients, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<RecipientsUpdateSummary> (response, "response is RecipientsUpdateSummary");
        }
        
        /// <summary>
        /// Test UpdateRecipientsDocumentVisibility
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateRecipientsDocumentVisibilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentVisibilityList documentVisibilityList = null;
            //string accountId = null;
            //string envelopeId = null;
            //var response = instance.UpdateRecipientsDocumentVisibility(documentVisibilityList, accountId, envelopeId);
            //NUnit.Framework.Assert.IsInstanceOf<DocumentVisibilityList> (response, "response is DocumentVisibilityList");
        }
        
        /// <summary>
        /// Test UpdateTabs
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateTabsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Tabs tabs = null;
            //string accountId = null;
            //string envelopeId = null;
            //string recipientId = null;
            //var response = instance.UpdateTabs(tabs, accountId, envelopeId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<Tabs> (response, "response is Tabs");
        }
        
        /// <summary>
        /// Test UpdateTemplateRecipientDocumentVisibility
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateTemplateRecipientDocumentVisibilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TemplateDocumentVisibilityList templateDocumentVisibilityList = null;
            //string accountId = null;
            //string templateId = null;
            //string recipientId = null;
            //var response = instance.UpdateTemplateRecipientDocumentVisibility(templateDocumentVisibilityList, accountId, templateId, recipientId);
            //NUnit.Framework.Assert.IsInstanceOf<TemplateDocumentVisibilityList> (response, "response is TemplateDocumentVisibilityList");
        }
        
        /// <summary>
        /// Test UpdateTemplateRecipientsDocumentVisibility
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void UpdateTemplateRecipientsDocumentVisibilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TemplateDocumentVisibilityList templateDocumentVisibilityList = null;
            //string accountId = null;
            //string templateId = null;
            //var response = instance.UpdateTemplateRecipientsDocumentVisibility(templateDocumentVisibilityList, accountId, templateId);
            //NUnit.Framework.Assert.IsInstanceOf<TemplateDocumentVisibilityList> (response, "response is TemplateDocumentVisibilityList");
        }
        
    }

}
