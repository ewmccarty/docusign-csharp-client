/* 
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using DocuSign.eSign.Client;
using DocuSign.eSign.Api;
using DocuSign.eSign.Model;

namespace DocuSign.eSign.Test
{
    /// <summary>
    ///  Class for testing FoldersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [NUnit.Framework.TestFixtureAttribute]
    public class FoldersApiTests
    {
        private FoldersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [NUnit.Framework.SetUpAttribute]
        public void Init()
        {
            instance = new FoldersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FoldersApi
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FoldersApi
            //NUnit.Framework.Assert.IsInstanceOf(typeof(FoldersApi), instance, "instance is a FoldersApi");
        }

        
        /// <summary>
        /// Test List
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string include = null;
            //string includeItems = null;
            //string startPosition = null;
            //string template = null;
            //string userFilter = null;
            //string accountId = null;
            //var response = instance.List(include, includeItems, startPosition, template, userFilter, accountId);
            //NUnit.Framework.Assert.IsInstanceOf<FoldersResponse> (response, "response is FoldersResponse");
        }
        
        /// <summary>
        /// Test ListItems
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ListItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromDate = null;
            //string includeItems = null;
            //string ownerEmail = null;
            //string ownerName = null;
            //string searchText = null;
            //string startPosition = null;
            //string status = null;
            //string toDate = null;
            //string accountId = null;
            //string folderId = null;
            //var response = instance.ListItems(fromDate, includeItems, ownerEmail, ownerName, searchText, startPosition, status, toDate, accountId, folderId);
            //NUnit.Framework.Assert.IsInstanceOf<FolderItemsResponse> (response, "response is FolderItemsResponse");
        }
        
        /// <summary>
        /// Test MoveEnvelopes
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void MoveEnvelopesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FoldersRequest foldersRequest = null;
            //string accountId = null;
            //string folderId = null;
            //var response = instance.MoveEnvelopes(foldersRequest, accountId, folderId);
            //NUnit.Framework.Assert.IsInstanceOf<FoldersResponse> (response, "response is FoldersResponse");
        }
        
        /// <summary>
        /// Test Search
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void SearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string all = null;
            //string count = null;
            //string fromDate = null;
            //string includeRecipients = null;
            //string order = null;
            //string orderBy = null;
            //string startPosition = null;
            //string toDate = null;
            //string accountId = null;
            //string searchFolderId = null;
            //var response = instance.Search(all, count, fromDate, includeRecipients, order, orderBy, startPosition, toDate, accountId, searchFolderId);
            //NUnit.Framework.Assert.IsInstanceOf<FolderItemResponse> (response, "response is FolderItemResponse");
        }
        
    }

}
