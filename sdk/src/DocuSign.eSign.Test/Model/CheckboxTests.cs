/* 
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using DocuSign.eSign.Api;
using DocuSign.eSign.Model;
using DocuSign.eSign.Client;
using System.Reflection;

namespace DocuSign.eSign.Test
{
    /// <summary>
    ///  Class for testing Checkbox
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [NUnit.Framework.TestFixtureAttribute]
    public class CheckboxTests
    {
        // TODO uncomment below to declare an instance variable for Checkbox
        //private Checkbox instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [NUnit.Framework.SetUpAttribute]
        public void Init()
        {
            // TODO uncomment below to create an instance of Checkbox
            //instance = new Checkbox();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Checkbox
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CheckboxInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Checkbox
            //NUnit.Framework.Assert.IsInstanceOf<Checkbox> (instance, "variable 'instance' is a Checkbox");
        }

        /// <summary>
        /// Test the property 'AnchorCaseSensitive'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void AnchorCaseSensitiveTest()
        {
            // TODO unit test for the property 'AnchorCaseSensitive'
        }
        /// <summary>
        /// Test the property 'AnchorHorizontalAlignment'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void AnchorHorizontalAlignmentTest()
        {
            // TODO unit test for the property 'AnchorHorizontalAlignment'
        }
        /// <summary>
        /// Test the property 'AnchorIgnoreIfNotPresent'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void AnchorIgnoreIfNotPresentTest()
        {
            // TODO unit test for the property 'AnchorIgnoreIfNotPresent'
        }
        /// <summary>
        /// Test the property 'AnchorMatchWholeWord'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void AnchorMatchWholeWordTest()
        {
            // TODO unit test for the property 'AnchorMatchWholeWord'
        }
        /// <summary>
        /// Test the property 'AnchorString'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void AnchorStringTest()
        {
            // TODO unit test for the property 'AnchorString'
        }
        /// <summary>
        /// Test the property 'AnchorUnits'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void AnchorUnitsTest()
        {
            // TODO unit test for the property 'AnchorUnits'
        }
        /// <summary>
        /// Test the property 'AnchorXOffset'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void AnchorXOffsetTest()
        {
            // TODO unit test for the property 'AnchorXOffset'
        }
        /// <summary>
        /// Test the property 'AnchorYOffset'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void AnchorYOffsetTest()
        {
            // TODO unit test for the property 'AnchorYOffset'
        }
        /// <summary>
        /// Test the property 'ConditionalParentLabel'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ConditionalParentLabelTest()
        {
            // TODO unit test for the property 'ConditionalParentLabel'
        }
        /// <summary>
        /// Test the property 'ConditionalParentValue'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ConditionalParentValueTest()
        {
            // TODO unit test for the property 'ConditionalParentValue'
        }
        /// <summary>
        /// Test the property 'CustomTabId'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void CustomTabIdTest()
        {
            // TODO unit test for the property 'CustomTabId'
        }
        /// <summary>
        /// Test the property 'DocumentId'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void DocumentIdTest()
        {
            // TODO unit test for the property 'DocumentId'
        }
        /// <summary>
        /// Test the property 'ErrorDetails'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void ErrorDetailsTest()
        {
            // TODO unit test for the property 'ErrorDetails'
        }
        /// <summary>
        /// Test the property 'Locked'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void LockedTest()
        {
            // TODO unit test for the property 'Locked'
        }
        /// <summary>
        /// Test the property 'MergeField'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void MergeFieldTest()
        {
            // TODO unit test for the property 'MergeField'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'PageNumber'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void PageNumberTest()
        {
            // TODO unit test for the property 'PageNumber'
        }
        /// <summary>
        /// Test the property 'RecipientId'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void RecipientIdTest()
        {
            // TODO unit test for the property 'RecipientId'
        }
        /// <summary>
        /// Test the property 'Required'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void RequiredTest()
        {
            // TODO unit test for the property 'Required'
        }
        /// <summary>
        /// Test the property 'RequireInitialOnSharedChange'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void RequireInitialOnSharedChangeTest()
        {
            // TODO unit test for the property 'RequireInitialOnSharedChange'
        }
        /// <summary>
        /// Test the property 'Selected'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void SelectedTest()
        {
            // TODO unit test for the property 'Selected'
        }
        /// <summary>
        /// Test the property 'Shared'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void SharedTest()
        {
            // TODO unit test for the property 'Shared'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'TabId'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void TabIdTest()
        {
            // TODO unit test for the property 'TabId'
        }
        /// <summary>
        /// Test the property 'TabLabel'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void TabLabelTest()
        {
            // TODO unit test for the property 'TabLabel'
        }
        /// <summary>
        /// Test the property 'TabOrder'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void TabOrderTest()
        {
            // TODO unit test for the property 'TabOrder'
        }
        /// <summary>
        /// Test the property 'TemplateLocked'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void TemplateLockedTest()
        {
            // TODO unit test for the property 'TemplateLocked'
        }
        /// <summary>
        /// Test the property 'TemplateRequired'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void TemplateRequiredTest()
        {
            // TODO unit test for the property 'TemplateRequired'
        }
        /// <summary>
        /// Test the property 'XPosition'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void XPositionTest()
        {
            // TODO unit test for the property 'XPosition'
        }
        /// <summary>
        /// Test the property 'YPosition'
        /// </summary>
        [NUnit.Framework.TestAttribute]
        public void YPositionTest()
        {
            // TODO unit test for the property 'YPosition'
        }

    }

}
